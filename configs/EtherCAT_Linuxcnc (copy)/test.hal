#load the XML config & the ethercat hal parser.
loadusr -W lcec_conf /home/yutingkao23/A5-slave-only.xml
loadrt lcec

#load the motion component
loadrt trivkins
loadrt [EMCMOT]EMCMOT base_period_nsec=[EMCMOT]BASE_PERIOD servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[TRAJ]AXES

#load the change format component
loadrt conv_s32_float
loadrt conv_float_s32

#load the gui
#loadusr -Wn gui pyvcp -c gui /home/yutingkao23/linuxcnc/configs/EtherCAT_Linuxcnc/gui.xml

#add the function we need to the servo-thread
addf lcec.read-all servo-thread
addf conv-s32-float.0 servo-thread
addf motion-command-handler servo-thread
addf motion-controller servo-thread
addf conv-float-s32.0 servo-thread
addf lcec.write-all servo-thread

#set the control word to 6 and the state will be ready to switch on.
setp lcec.0.0.drivecontrol-1 1
setp lcec.0.0.drivecontrol-2 1

#check if the state is in OP mode then enable emc and go to switched on state.
net ready_to_switch lcec.state-op => iocontrol.0.emc-enable-in => lcec.0.0.drivecontrol-0

#connect the axis enable button with operation enabled
net Xachse_AF axis.0.amp-enable-out => lcec.0.0.drivecontrol-3
net operation lcec.0.0.drivestatus-2 => lcec.0.0.drivecontrol-4

setp lcec.0.0.maxtorq 5000
setp lcec.0.0.targetvel 1000
setp lcec.0.0.maxspeed [AXIS_0]MAX_VELOCITY 

#not use for gui
#net ready_to_switch2 lcec.0.0.drivestatus-0 gui.readyled
#net switch_on lcec.0.0.drivestatus-1 gui.switchled
#net oper_enable gui.op => lcec.0.0.drivecontrol-4
#net oper_enable gui.opled <= lcec.0.0.drivecontrol-4


#connect the command and display of position.(need to change the tyoe by conv-s32)
net csf_in conv-s32-float.0.in <= lcec.0.0.Actual_Pos
net csf_out conv-s32-float.0.out => axis.0.motor-pos-fb
net cfs_in conv-float-s32.0.in <= axis.0.motor-pos-cmd 
net cfs_out conv-float-s32.0.out => lcec.0.0.targetpos

#Torq
#net Xchase_torq gui.xtorque_bar

net Xachse_torq lcec.0.0.Actual_torque
#net X_torq gui.xtorque_bar




