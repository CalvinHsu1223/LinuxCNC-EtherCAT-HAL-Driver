#load the XML config & the ethercat hal parser.
loadusr -W lcec_conf /home/yutingkao23/pano3.xml
loadrt lcec

#load the motion component
loadrt trivkins
loadrt [EMCMOT]EMCMOT base_period_nsec=[EMCMOT]BASE_PERIOD servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[TRAJ]AXES
loadrt sampler depth=1000 cfg=ffffff
#load the gui
#loadusr -Wn gui pyvcp -c gui /home/yutingkao23/linuxcnc/configs/EtherCAT_Linuxcnc/gui.xml

#add the function we need to the servo-thread
addf lcec.read-all servo-thread
addf motion-command-handler servo-thread
addf motion-controller servo-thread
addf lcec.write-all servo-thread

#set the control word to 6 and the state will be ready to switch on.
setp lcec.0.0.drivecontrol-1 1
setp lcec.0.0.drivecontrol-2 1
setp lcec.0.1.drivecontrol-1 1
setp lcec.0.1.drivecontrol-2 1
setp lcec.0.2.drivecontrol-1 1
setp lcec.0.2.drivecontrol-2 1

#check if the state is in OP mode then enable emc and go to switched on state.
net ready_to_switch lcec.state-op => iocontrol.0.emc-enable-in => lcec.0.0.drivecontrol-0 => lcec.0.1.drivecontrol-0 => lcec.0.2.drivecontrol-0

#connect the axis enable button with operation enabled
net Xachse_AF axis.0.amp-enable-out => lcec.0.0.drivecontrol-3
net operation lcec.0.0.drivestatus-2 => lcec.0.0.drivecontrol-4
net Xachse_AF2 axis.1.amp-enable-out => lcec.0.1.drivecontrol-3
net operation2 lcec.0.1.drivestatus-2 => lcec.0.1.drivecontrol-4
net Xachse_AF3 axis.2.amp-enable-out => lcec.0.2.drivecontrol-3
net operation3 lcec.0.2.drivestatus-2 => lcec.0.2.drivecontrol-4

setp lcec.0.0.maxtorq [AXIS_0]MAX_TORQUE
setp lcec.0.0.maxspeed [AXIS_0]MAX_VELOCITY 
setp lcec.0.1.maxtorq [AXIS_1]MAX_TORQUE
setp lcec.0.1.maxspeed [AXIS_1]MAX_VELOCITY 
setp lcec.0.2.maxtorq [AXIS_2]MAX_TORQUE
setp lcec.0.2.maxspeed [AXIS_2]MAX_VELOCITY 

#not use for gui
#net ready_to_switch2 lcec.0.0.drivestatus-0 gui.readyled
#net switch_on lcec.0.0.drivestatus-1 gui.switchled
#net oper_enable gui.op => lcec.0.0.drivecontrol-4
#net oper_enable gui.opled <= lcec.0.0.drivecontrol-4


#connect the command and display of position.

net cmd axis.0.motor-pos-cmd => lcec.0.0.targetpos => sampler.0.pin.0 
net fbcmd lcec.0.0.Actual_Pos => axis.0.motor-pos-fb => sampler.0.pin.1
net cmd2 axis.1.motor-pos-cmd => lcec.0.1.targetpos => sampler.0.pin.2
net fbcmd2 lcec.0.1.Actual_Pos => axis.1.motor-pos-fb => sampler.0.pin.3
net cmd3 axis.2.motor-pos-cmd => lcec.0.2.targetpos => sampler.0.pin.4
net fbcmd3 lcec.0.2.Actual_Pos => axis.2.motor-pos-fb => sampler.0.pin.5
#net speedcmd axis.0.joint-vel-cmd => lcec.0.0.targetvel

#net homex axis.0.homing => axis.0.home-sw-in
#net homey axis.1.homing => axis.1.home-sw-in

#Torq
#net Xchase_torq gui.xtorque_bar

#net Xachse_torq lcec.0.0.Actual_torque
#net X_torq gui.xtorque_bar


addf sampler.0 servo-thread

loadusr halsampler -c 0 -n 1000000 /home/yutingkao23/ilc1.txt

