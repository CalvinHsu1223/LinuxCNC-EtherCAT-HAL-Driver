# EMC controller parameters for a simulated machine.

# General note: Comments can either be preceded with a # or ; - either is
# acceptable, although # is in keeping with most linux config files.

# General section -------------------------------------------------------------
[EMC]

# Version of this INI file
VERSION =               $Revision$

# Name of machine, for use with display, etc.
MACHINE =               EMC-HAL-SIM-AXIS

# Debug level, 0 means no messages. See src/emc/nml_int/emcglb.h for others
DEBUG =               0x7FFFFFFF
#DEBUG = 0 # 0x00000100
#    0x00000001 Ausgabe ung√ºltige Meldungen
#    0x00000002 Ausgabe Konfigurations-Settings
#    0x00000004 Ausgabe Defaults
#    0x00000008 Ausgabe Version
#    0x00000010 Ausgabe Task Meldungen
#    0x00000020 Ausgabe IO-Points
#    0x00000040 Ausgabe NML-Messages
#    0x00000080 Ausgabe Zeit zur Beendigung einer Motorbewegung
#    0x00000100 Ausgabe Intepreter Debugging
#    0x00000200 Ausgabe RCS-Debugging
#    0x00000400 Ausgabe Roh-Bahn-Daten
#    0x00000800 Ausgabe Interpreter List
#    0x7FFFFFFF Ausgabe alle Debugging Messages

# Sections for display options ------------------------------------------------
[DISPLAY]

GLADEVCP=osubdemo-ns.ui

# Name of display program, e.g., xemc
DISPLAY =             axis

#OPEN_FILE=../../nc_files/m66test.ngc
OPEN_FILE=../../nc_files/t3.ngc

# Cycle time, in seconds, that display will sleep between polls
CYCLE_TIME =            0.100

# Path to help file
HELP_FILE =             doc/help.txt

# Initial display setting for position, RELATIVE or MACHINE
POSITION_OFFSET =       RELATIVE

# Initial display setting for position, COMMANDED or ACTUAL
POSITION_FEEDBACK =     ACTUAL

# Highest value that will be allowed for feed override, 1.0 = 100%
MAX_FEED_OVERRIDE =     1.2
MAX_SPINDLE_OVERRIDE =  1.0
# Prefix to be used
PROGRAM_PREFIX = ../../nc_files/

# Introductory graphic
INTRO_GRAPHIC = emc2.gif
INTRO_TIME = 5

EDITOR = gedit

INCREMENTS = 1 mm, .01 in, .1mm, 1 mil, .1 mil, 1/8000 in
[FILTER]
PROGRAM_EXTENSION = .png,.gif,.jpg Grayscale Depth Image
PROGRAM_EXTENSION = .py Python Script

png = image-to-gcode
gif = image-to-gcode
jpg = image-to-gcode
py = python

# Task controller section -----------------------------------------------------
[TASK]

# Name of task controller program, e.g., milltask
TASK =                  milltask

# Cycle time, in seconds, that task controller will sleep between polls
CYCLE_TIME =            0.001

# Part program interpreter section --------------------------------------------
[RS274NGC]

# remap T<pocket> to a named oword subroutine.
# The tool number will be passed as parameter #1
# The pocket number will be passed as parameter #2

# if positive return value, commits the tool prepare.
# Otherwise just a procedure call.

T_COMMAND=o<tdemo>call

# remap M6 to a named oword subroutine.

# parameter #1: the current tool-in-spindle
# parameter #2: the tool number requested in the last T (prepare) command
# parameter #3: pocket of new tool

# param #3 at this point in time is useless - dont rely on its value.
# This will change once iocontrol is history, and tooltable I/O is
# moved to the interpreter.

# if positive return value, commits the tool change.
# Otherwise just a procedure call.

M6_COMMAND=o<m6demo>call

# called on M61 with Q-number as parameter #1
# if positive return value, commits the tool number change.
# Otherwise just a procedure call.
M61_COMMAND=o<m61demo>call

# handler procedure called on aborts - to cleanup HAL pins etc
ON_ABORT_COMMAND=o<on_abort>call


LOG_LEVEL =0
# File containing interpreter variables
PARAMETER_FILE =        sim_mm.var

# Motion control section ------------------------------------------------------
[EMCMOT]

EMCMOT =              motmod

# Timeout for comm to emcmot, in seconds
COMM_TIMEOUT =          1.0

# Interval between tries to emcmot, in seconds
COMM_WAIT =             0.010

# BASE_PERIOD is unused in this configuration but specified in core_sim.hal
BASE_PERIOD  =               0
# Servo task period, in nano-seconds
SERVO_PERIOD =               1000000

# Hardware Abstraction Layer section --------------------------------------------------
[HAL]

# The run script first uses halcmd to execute any HALFILE
# files, and then to execute any individual HALCMD commands.
#

# list of hal config files to run through halcmd
# files are executed in the order in which they appear
HALFILE =                    core_sim.hal
#HALFILE = axis_owordsub_manualtoolchange.hal
HALFILE = simulated_home.hal
#HALFILE = gamepad.hal

# list of halcmd commands to execute
# commands are executed in the order in which they appear
#HALCMD =                    save neta

# Single file that is executed after the GUI has started.  Only supported by
# AXIS at this time (only AXIS creates a HAL component of its own)
#POSTGUI_HALFILE = test_postgui.hal
POSTGUI_HALFILE = v2_oword_gladevcp_postgui.hal

HALUI = halui

# Trajectory planner section --------------------------------------------------
[TRAJ]

AXES =                  3
COORDINATES =           X Y Z
HOME =                  0 0 0
LINEAR_UNITS =          mm
ANGULAR_UNITS =         degree
CYCLE_TIME =            0.010
DEFAULT_VELOCITY =      30.48
MAX_VELOCITY =          53.34
DEFAULT_ACCELERATION =  508
MAX_ACCELERATION =      508
POSITION_FILE = position_mm.txt
NO_FORCE_HOMING =       1

# Axes sections ---------------------------------------------------------------

# First axis
[AXIS_0]

TYPE =                          LINEAR
HOME =                          0.000
MAX_VELOCITY =                  30.48
MAX_ACCELERATION =              508
BACKLASH = 0.000
INPUT_SCALE =                   157.48
OUTPUT_SCALE = 1.000
MIN_LIMIT =                     -254
MAX_LIMIT =                     254
FERROR = 1.27
MIN_FERROR = .254
HOME_OFFSET =                    0.0
HOME_SEARCH_VEL =                127
HOME_LATCH_VEL =                 25.4
HOME_USE_INDEX =                 NO
HOME_IGNORE_LIMITS =             NO
HOME_SEQUENCE = 1
HOME_IS_SHARED = 1

# Second axis
[AXIS_1]

TYPE =                          LINEAR
HOME =                          0.000
MAX_VELOCITY =                  30.48
MAX_ACCELERATION =              508
BACKLASH = 0.000
INPUT_SCALE =                   157.48
OUTPUT_SCALE = 1.000
MIN_LIMIT =                     -254
MAX_LIMIT =                     254
FERROR = 1.27
MIN_FERROR = .254
HOME_OFFSET =                    0.0
HOME_SEARCH_VEL =                127
HOME_LATCH_VEL =                 25.4
HOME_USE_INDEX =                 NO
HOME_IGNORE_LIMITS =             NO
HOME_SEQUENCE = 1

# Third axis
[AXIS_2]

TYPE =                          LINEAR
HOME =                          0.0
MAX_VELOCITY =                  30.48
MAX_ACCELERATION =              508
BACKLASH = 0.000
INPUT_SCALE =                   157.48
OUTPUT_SCALE = 1.000
MIN_LIMIT =                     -50.8
MAX_LIMIT =                     101.6
FERROR = 1.27
MIN_FERROR = .254
HOME_OFFSET =                    25.4
HOME_SEARCH_VEL =                127
HOME_LATCH_VEL =                 25.4
HOME_USE_INDEX =                 NO
HOME_IGNORE_LIMITS =             NO
HOME_SEQUENCE = 0
HOME_IS_SHARED = 1

# section for main IO controller parameters -----------------------------------
[EMCIO]

# Name of IO controller program, e.g., io

#  explicitly support the start-change protocol.
#  needs to be explicitly enabled for backwards compatibility.
#  NB: if the start-change pin isnt used it needs to be looped like below to
#  start-change-ack or an M6 will hang waiting for start-change-ack:
#  net start-change iocontrol.0.start-change  iocontrol.0.start-change-ack
EMCIO = 		iov2 -support-start-change

# starting iov2 like so will create the start-change and start-change-ack pins
# but the start-change protocol remains disabled - start-change remains low and
# start-change-ack is ignored:
#EMCIO = 		iov2

# cycle time, in seconds
CYCLE_TIME =    0.100

# tool table file
TOOL_TABLE =    sim_mm_test.tbl
TOOL_CHANGE_POSITION = 0 0 50.8

#RANDOM_TOOLCHANGER = 1
