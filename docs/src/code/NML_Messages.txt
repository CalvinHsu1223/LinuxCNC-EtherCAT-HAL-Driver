= NML Messages

== EMC OPERATOR

=== EMC_OPERATOR_ERROR_TYPE

Description, NML Type: textual error message to the operator, 11

Written From: emccanon.cc, iosh.cc

Read To: emctaskmain.cc, emcsh.cc

Parameter, Type: [error, char[LINELEN]]

=== EMC_OPERATOR_TEXT_TYPE

Description, NML Type: textual information message to the operator, 12

Written From: emctaskmain.cc

Read To: emctaskmain.cc, emcsh.cc

Parameter, Type: [text, char[LINELEN]]

=== EMC_OPERATOR_DISPLAY_TYPE

Description, NML Type: URL or filename of a document to display, 13

Obs: not used, only read

Written From: none

Read To: emctaskmain.cc, emcsh.cc

Parameter, Type: [display, char[LINELEN]]

== EMC NULL, SET, DEBUG, & SYSTEM

=== EMC_NULL_TYPE

Description, NML Type: used to reset serial number to original, 21

Written From: thisQuit (emcsh.cc)

Read To: emctaskmain.cc

Parameter, Type: none

=== EMC_SET_DEBUG_TYPE

Description, NML Type: sets debug level, 22

Written From: emcIoSetDebug (iotaskintf.cc), sendDebug (emcsh.cc)

Read To: emctaskmain.cc, ioControl.cc

Parameter, Type: [debug, int]

=== EMC_SYSTEM_CMD_TYPE

Description, NML Type: execute a system command, 30

Written From: user_defined_add_m_code (emctask.cc)

Read To: emcSystemCmd (emctaskmain.cc)

Parameter, Type: [string, char[LINELEN]]

== EMC AXIS

=== EMC_AXIS_SET_AXIS_TYPE

Description, NML Type: axis type to linear or angular, 101

Obs: not used

Written From: none

Read To: none

Parameter, Type: [axis (in EMC_AXIS_CMD_MSG), int] [axisType, unsigned char]

=== EMC_AXIS_SET_UNITS_TYPE

Description, NML Type: units conversion factor, 102

Obs: not used

Written From: none

Read To: none

Parameter, Type: [axis (in EMC_AXIS_CMD_MSG), int] [units, double]

=== EMC_AXIS_SET_GAINS_TYPE

Description, NML Type: Set the PID gains, 103

Obs: currently not used in EMC2, needs to go to HAL

Written From: none

Read To: emctaskmain.cc

++++
Parameter, Type: [axis (in EMC_AXIS_CMD_MSG), int]
[p, double] [i,double] [d, double]
[ff0, double] [ff1, double] [ff2, double]
[backlash, double] [bias, double] [maxError, double]
++++

=== EMC_AXIS_SET_CYCLE_TIME_TYPE

Description, NML Type: cycle time for the servo task, 104

Written From: none

Read To: emctaskmain.cc

Parameter, Type: [axis (in EMC_AXIS_CMD_MSG), int] [cycleTime, double]

=== EMC_AXIS_SET_INPUT_SCALE_TYPE

Description, NML Type: scale factor and offset for the position input, 105

Obs: currently if 0'ed, used only directly from iniaxis

Written From: none

++++
Read To: emcTaskIssueCommand (emctaskmain.cc)
calls emcAxisSetInputScale (minimill|bridgeporttaskintf.cc)
which sends EMCMOT_SET_INPUT_SCALE
++++

Parameter, Type: [axis (in EMC_AXIS_CMD_MSG), int] [scale, double] [offset, double]

=== EMC_AXIS_SET_OUTPUT_SCALE_TYPE

Description, NML Type: scale factor and offset for the position
output, 106

Obs: currently if 0'ed, used only directly from iniaxis

Written From: none

Read To: emcTaskIssueCommand (emctaskmain.cc)

Parameter, Type: [axis (in EMC_AXIS_CMD_MSG), int] [scale, double] [offset, double]

=== EMC_AXIS_SET_MIN_POSITION_LIMIT_TYPE

Description, NML Type: sets min limit, 107

Obs: also handled by iniaxis which directly calls emcAxisSetMinPositionLimit

Written From: none

++++
Read To: emcTaskIssueCommand (emctaskmain.cc)
calls emcAxisSetMinPositionLimit (taskintf.cc)
which sends EMCMOT_SET_POSITION_LIMITS
++++

Parameter, Type: [axis (in EMC_AXIS_CMD_MSG), int] [limit, double]

=== EMC_AXIS_SET_MAX_POSITION_LIMIT_TYPE

Description, NML Type: sets max limit, 108

Obs: also handled by iniaxis which directly calls emcAxisSetMaxPositionLimit

Written From: none

++++
Read To: emcTaskIssueCommand (emctaskmain.cc)
calls emcAxisSetMaxPositionLimit (taskintf.cc)
which sends EMCMOT_SET_POSITION_LIMITS
++++

Parameter, Type: [axis (in EMC_AXIS_CMD_MSG), int] [limit, double]

=== EMC_AXIS_SET_MIN_OUTPUT_LIMIT_TYPE

Description, NML Type: -, 109

Obs: not used

Written From: none

Read To: none

Parameter, Type: [axis (in EMC_AXIS_CMD_MSG), int] [limit, double]

=== EMC_AXIS_SET_MAX_OUTPUT_LIMIT_TYPE

Description, NML Type: -, 110

Obs: not used

Written From: none

Read To: none

Parameter, Type: [axis (in EMC_AXIS_CMD_MSG), int] [limit, double]

=== EMC_AXIS_SET_FERROR_TYPE

Description, NML Type: sets max following error, 111

Obs: also handled by iniaxis which directly calls emcAxisSetFerror

Written From: none

++++
Read To: emcTaskIssueCommand (emctaskmain.cc)
calls emcAxisSetFerror (taskintf.cc)
which sends EMCMOT_SET_MAX_FERROR
++++

Parameter, Type: [axis (in EMC_AXIS_CMD_MSG), int] [ferror, double]

=== EMC_AXIS_SET_HOMING_VEL_TYPE

Description, NML Type: -, 112

Obs: in EMC2 those are SET_HOMING_PARAMS double home, double offset,
double search_vel, double latch_vel, int use_index, int ignore_limits,

Written From: none

Read To: none

Parameter, Type: [axis (in EMC_AXIS_CMD_MSG), int] [ferror, double]

=== EMC_AXIS_SET_HOME_TYPE

Description, NML Type: -, 113

Written From: none

Read To: none

Parameter, Type: [axis (in EMC_AXIS_CMD_MSG), int] [homingVel, double]

=== EMC_AXIS_SET_HOME_OFFSET_TYPE

Description, NML Type: -, 114

Written From: none

Read To: none

Parameter, Type: [axis (in EMC_AXIS_CMD_MSG), int] [home, double]

=== EMC_AXIS_SET_MIN_FERROR_TYPE

Description, NML Type: sets min following error, 115

Obs: also handled by iniaxis which directly calls emcAxisSetMinFerror

Written From: none

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcAxisSetMinFerror (taskintf.cc) +
which sends EMCMOT_SET_MIN_FERROR

Parameter, Type: [axis (in EMC_AXIS_CMD_MSG), int] [offset, double]

=== EMC_AXIS_SET_MAX_VELOCITY_TYPE

Description, NML Type: sets max. velocity, 116

Obs: not used

Written From: none

Read To: none

Parameter, Type: [axis (in EMC_AXIS_CMD_MSG), int] [vel, double]

=== EMC_AXIS_INIT_TYPE

Description, NML Type: -, 118

Obs: not used

Written From: none

Read To: none

Parameter, Type: [axis (in EMC_AXIS_CMD_MSG), int]

=== EMC_AXIS_HALT_TYPE

Description, NML Type: -, 119

Obs: not used, only read

Written From: none

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcAxisHalt (taskintf.cc)

Parameter, Type: [axis (in EMC_AXIS_CMD_MSG), int]

=== EMC_AXIS_ABORT_TYPE

Description, NML Type: aborts motion on an axis (e.g. GUI jogs), 120

Obs: used from the GUI when stopping a manual jog

Written From: sendJogStop (emcsh.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcAxisAbort (taskintf.cc) +
which sends EMCMOT_AXIS_ABORT

Parameter, Type: [axis (in EMC_AXIS_CMD_MSG), int]

=== EMC_AXIS_ENABLE_TYPE

Description, NML Type: enables axis, 121

Obs: not used from tkemc & mini

Written From: sendAxisEnable (emcsh.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcAxisEnable (taskintf.cc) +
which sends EMCMOT_ENABLE_AMPLIFIER

Parameter, Type: [axis (in EMC_AXIS_CMD_MSG), int]

=== EMC_AXIS_DISABLE_TYPE

Description, NML Type: disable axis, 122

Obs: not used from tkemc & mini

Written From: sendAxisDisable (emcsh.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcAxisDisable (taskintf.cc) +
which sends EMCMOT_DISABLE_AMPLIFIER

Parameter, Type: [axis (in EMC_AXIS_CMD_MSG), int]

=== EMC_AXIS_HOME_TYPE

Description, NML Type: home an axis at current position, 123

Obs: used from tkemc & mini through emc_home

Written From: sendHome (emcsh.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcAxisHome (taskintf.cc) +
which sends EMCMOT_HOME

Parameter, Type: [axis (in EMC_AXIS_CMD_MSG), int]

=== EMC_AXIS_JOG_TYPE

Description, NML Type: jogs an axis continuously, 124

Obs: used on jogging

Written From: sendJogCont (emcsh.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcAxisJog (taskintf.cc) +
which sends EMCMOT_JOG_CONT

Parameter, Type: [axis (in EMC_AXIS_CMD_MSG), int] [vel, double]

=== EMC_AXIS_INCR_JOG_TYPE

Description, NML Type: jogs an axis with an increment, 125

Obs: used on jogging

Written From: sendJogIncr (emcsh.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcAxisIncrJog (taskintf.cc) +
which sends EMCMOT_JOG_INCR

Parameter, Type: [axis (in EMC_AXIS_CMD_MSG), int] +
incr, double] [vel, double]

=== EMC_AXIS_ABS_JOG_TYPE

Description, NML Type: jogs an axis with an absolute value, 126

Obs: not used, only read

Written From: none

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcAxisAbsJog (taskintf.cc) +
which sends EMCMOT_JOG_ABS

++++
Parameter, Type: [axis (in EMC_AXIS_CMD_MSG), int]
[pos, double] [vel, double]
++++

=== EMC_AXIS_ACTIVATE_TYPE

Description, NML Type: -, 127

Obs: not used

Written From: none

Read To: none

Parameter, Type: [axis (in EMC_AXIS_CMD_MSG), int]

=== EMC_AXIS_DEACTIVATE_TYPE

Description, NML Type: -, 128

Obs: not used

Written From: none

Read To: none

Parameter, Type: [axis (in EMC_AXIS_CMD_MSG), int]

=== EMC_AXIS_OVERRIDE_LIMITS_TYPE

Description, NML Type: overrides min/max limits during homing, 129

Obs: used from tkemc & mini through emc_override_limit

Written From: sendOverrideLimits (emcsh.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcAxisOverrideLimits (taskintf.cc) +
which sends EMCMOT_OVERRIDE_LIMITS

Parameter, Type: [axis (in EMC_AXIS_CMD_MSG), int]

=== EMC_AXIS_SET_OUTPUT_TYPE

Description, NML Type: sets an DAC output value, 130

Obs: currently not used in EMC2, needs to go to HAL

Written From: sendAxisSetOutput (emcsh.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcAxisSetOutput (taskintf.cc) +
which sends EMCMOT_DAC_OUT

Parameter, Type: [axis (in EMC_AXIS_CMD_MSG), int] [output, double]

=== EMC_AXIS_LOAD_COMP_TYPE

Description, NML Type: loads compensation values from a file, 131

Obs: currently usrmotLoadComp if 0'ed in EMC2

Written From: sendAxisLoadComp (emcsh.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcAxisLoadComp (minimill|bridgeporttaskintf.cc) +
which calls usrmotLoadComp

Parameter, Type: [axis (in EMC_AXIS_CMD_MSG), int] [file, char[LINELEN]]

=== EMC_AXIS_ALTER_TYPE

Description, NML Type: loads the alter value to modify the axis
position, 132

Written From: sendAxisAlter (emcsh.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcAxisAlter (taskintf.cc) +
which calls usrmotAlter

Parameter, Type: [axis (in EMC_AXIS_CMD_MSG), int] [alter, double]

=== EMC_AXIS_SET_STEP_PARAMS_TYPE

Description, NML Type: was used to set step related params, 133

Obs: currently not used in EMC2, needs to go to HAL +
        (maybe directly from the ini, not through NML)

Written From: none

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcAxisSetStepParams (taskintf.cc) +
which sends EMCMOT_SET_STEP_PARAMS

Parameter, Type: [axis (in EMC_AXIS_CMD_MSG), int] [setup_time,
double] [hold_time, double]

=== EMC_AXIS_STAT_TYPE

Description, NML Type: status for axis, not sent as a message but used as is, 199

Written From: none

Read To: none

Parameter, Type: [a HUGE load of params]

== EMC TRAJ

=== EMC_TRAJ_SET_AXES_TYPE

Description, NML Type: -, 201

Obs: not used

Written From: none

Read To: none

Parameter, Type: [axes, int]

=== EMC_TRAJ_SET_UNITS_TYPE

Description, NML Type: -, 202

Obs: not used

Written From: none

Read To: none

Parameter, Type: [linearUnits, double] [angularUnits, double]

=== EMC_TRAJ_SET_CYCLE_TIME_TYPE

Description, NML Type: -, 203

Obs: not used

Written From: none

Read To: none

Parameter, Type: [cycleTime, double]

=== EMC_TRAJ_SET_MODE_TYPE

Description, NML Type: -, 204

Obs: not used

Written From: none

Read To: none

Parameter, Type: [mode, enum EMC_TRAJ_MODE_ENUM]

=== EMC_TRAJ_SET_VELOCITY_TYPE

Description, NML Type: sends a request to set the vel, which is in
internal units/sec, 205

Written From: sendVelMsg (emccanon.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcTrajSetVelocity (minimill | bridgeporttaskintf.cc) +
which sends EMCMOT_SET_VEL

Parameter, Type: [velocity, double]

=== EMC_TRAJ_SET_ACCELERATION_TYPE

Description, NML Type: -, 206

Obs: not used

Written From: none

Read To: none

Parameter, Type: [acceleration, double]

=== EMC_TRAJ_SET_MAX_VELOCITY_TYPE

Description, NML Type: -, 207

Obs: not used

Written From: none

Read To: none

Parameter, Type: [velocity, double]

=== EMC_TRAJ_SET_MAX_ACCELERATION_TYPE

Description, NML Type: -, 208

Obs: not used

Written From: none

Read To: none

Parameter, Type: [acceleration, double]

=== EMC_TRAJ_SET_SCALE_TYPE

Description, NML Type: set the feed override to be the percent value, 209

Obs: used for feed override messages

Written From: sendFeedOverride (emcsh.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcTrajSetScale (taskintf.cc) +
which sends EMCMOT_SCALE

Parameter, Type: [scale, double]

=== EMC_TRAJ_SET_MOTION_ID_TYPE

Description, NML Type: -, 210

Obs: not used

Written From: none

Read To: none

Parameter, Type: [id, int]

=== EMC_TRAJ_INIT_TYPE

Description, NML Type: -, 211

Obs: not used

Written From: none

Read To: none

Parameter, Type:

=== EMC_TRAJ_HALT_TYPE

Description, NML Type: -, 212

Obs: not used

Written From: none

Read To: none

Parameter, Type:

=== EMC_TRAJ_ENABLE_TYPE

Description, NML Type: -, 213

Obs: not used

Written From: none

Read To: none

Parameter, Type:

=== EMC_TRAJ_DISABLE_TYPE

Description, NML Type: -, 214

Obs: not used

Written From: none

Read To: none

Parameter, Type:

=== EMC_TRAJ_ABORT_TYPE

Description, NML Type: causes traj to abort ?, 215

Obs: not used, only read

Written From: none

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcTrajAbort (taskintf.cc) +
which sends EMCMOT_ABORT

Parameter, Type:

=== EMC_TRAJ_PAUSE_TYPE

Description, NML Type: causes traj to pause ?, 216

Obs: not used, only read

Written From: none

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcTrajPause (minimill | bridgeporttaskintf.cc) +
which sends EMCMOT_PAUSE

Parameter, Type:

=== EMC_TRAJ_STEP_TYPE

Description, NML Type: -, 217

Obs: not used

Written From: none

Read To: none

Parameter, Type:

=== EMC_TRAJ_RESUME_TYPE

Description, NML Type: causes traj to resume ?, 218

Obs: not used, only read

Written From: none

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcTrajResume (minimill | bridgeporttaskintf.cc) +
which sends EMCMOT_RESUME

Parameter, Type:

=== EMC_TRAJ_DELAY_TYPE

Description, NML Type: sets a delay in the task execution, 219

Obs: used with dwelling

Written From: DWELL (emccanon.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc)

Parameter, Type: [delay, double]

=== EMC_TRAJ_LINEAR_MOVE_TYPE

Description, NML Type: sends a linear move from the interp to motion, 220

Obs: used

Written From: STRAIGHT_TRAVERSE, ARC_FEED (emccanon.cc)

Read To: checkInterpList, emcTaskIssueCommand (emctaskmain.cc) +
calls emcTrajLinearMove (minimill | bridgeporttaskintf.cc) +
which sends EMCMOT_SET_LINE

Parameter, Type: [end, EmcPose]

=== EMC_TRAJ_CIRCULAR_MOVE_TYPE

Description, NML Type: sends a circular move from the interp to
motion, 221

Obs: used

Written From: ARC_FEED (emccanon.cc)

Read To: checkInterpList, emcTaskIssueCommand (emctaskmain.cc) +
calls emcTrajCircularMove (minimill | bridgeporttaskintf.cc) +
which sends EMCMOT_SET_CIRCLE

++++
Parameter, Type: [end, EmcPose] [center, PM_CARTESIAN] 
[normal, PM_CARTESIAN] [turn, int]
++++

=== EMC_TRAJ_SET_TERM_COND_TYPE

Description, NML Type: chooses between blending or exact path mode, 222

Obs: used, seems the interp knows exact PATH, STOP and BLEND, motion
however knows only BLEND or STOP

Written From: SET_MOTION_CONTROL_MODE (emccanon.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcTrajSetTermCond (minimill | bridgeporttaskintf.cc) +
which sends EMCMOT_TERM_COND_STOP or EMCMOT_TERM_COND_BLEND

Parameter, Type: [cond, int]

=== EMC_TRAJ_SET_OFFSET_TYPE

Description, NML Type: is used for tool length offset, 223

Obs: used, the message could transport more than just Z offset used
for tool length

Written From: USE_TOOL_LENGTH_OFFSET (emccanon.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc) +
`                `remembers the origin offset into emcStatus\->task.origin

Parameter, Type: [offset, EmcPose]

=== EMC_TRAJ_SET_ORIGIN_TYPE

Description, NML Type: sets the origin coords ?, 224

Obs: used

Written From: SET_ORIGIN_OFFSETS (emccanon.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc) +
remembers the tool length offset

Parameter, Type: [origin, EmcPose]

=== EMC_TRAJ_SET_HOME_TYPE

Description, NML Type: -, 225

Obs: not used

Written From: none

Read To: none

Parameter, Type: [home, EmcPose]

=== EMC_TRAJ_SET_PROBE_INDEX_TYPE

Description, NML Type: sends the index pin used for probing, 226

Obs: should get obsolete, probin pin should get routed by HAL

Written From: sendSetProbeIndex (emcsh.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcTrajSetProbeIndex (minimill | bridgeporttaskintf.cc) +
which sends EMCMOT_SET_PROBE_INDEX

Parameter, Type: [index, int]

=== EMC_TRAJ_SET_PROBE_POLARITY_TYPE

Description, NML Type: sends the polarity for the pin used for
probing, 227

Obs: should get obsolete, probin pin polarity should get routed by HAL

Written From: sendSetProbePolarity (emcsh.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcTrajSetProbePolarity (minimill | bridgeporttaskintf.cc) +
which sends EMCMOT_SET_PROBE_POLARITY

Parameter, Type: [polarity, int]

=== EMC_TRAJ_CLEAR_PROBE_TRIPPED_FLAG_TYPE

Description, NML Type: clears the probe tripped, 228

Obs: used

Written From: TURN_PROBE_ON (emccanon.cc) +
sendClearProbeTrippedFlag (emcsh.cc) +

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcTrajClearProbeTrippedFlag (minimill | bridgeporttaskintf.cc) +
which sends EMCMOT_CLEAR_PROBE_FLAGS

Parameter, Type:

=== EMC_TRAJ_PROBE_TYPE

Description, NML Type: performs a straight probe move, 229

Obs: used

Written From: STRAIGHT_PROBE (emccanon.cc) sendProbe (emcsh.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcTrajProbe (minimill | bridgeporttaskintf.cc) +
which sends EMCMOT_PROBE

Parameter, Type: [pos, EmcPose]

=== EMC_TRAJ_SET_TELEOP_ENABLE_TYPE

Description, NML Type: sets the traj mode to teleop, 230

Obs: used

Written From: sendSetTeleopEnable (emcsh.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcTrajSetMode (minimill | bridgeporttaskintf.cc) +
which sends EMCMOT_TELEOP

Parameter, Type: [enable, int]

=== EMC_TRAJ_SET_TELEOP_VECTOR_TYPE

Description, NML Type: jogs in teleop mode, 231

Obs: used for jogging in teleop mode

Written From: sendJogCont (emcsh.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcTrajSetTeleopVector (minimill | bridgeporttaskintf.cc) +
which sends EMCMOT_SET_TELEOP_VECTOR

Parameter, Type: [vector, EmcPose]

=== EMC_TRAJ_STAT_TYPE

Description, NML Type: status for traj, not sent as a message but used as is, 299

Written From: none

Read To: none

Parameter, Type: [a HUGE load of params]

== EMC MOTION

=== EMC_MOTION_INIT_TYPE

Description, NML Type: -, 301

Obs: not used

Written From: none

Read To: none

Parameter, Type:

=== EMC_MOTION_HALT_TYPE

Description, NML Type: -, 302

Obs: not used

Written From: none

Read To: none

Parameter, Type:

=== EMC_MOTION_ABORT_TYPE

Description, NML Type: -, 303

Obs: not used

Written From: none

Read To: none

Parameter, Type:

=== EMC_MOTION_SET_AOUT_TYPE

Description, NML Type: sets an analog output value coordinated with motion, 304

Obs: emccanon.cc currently lacks this in EMC2, not used in EMC2, needs to go to HAL

Written From: none

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcMotionSetAout (minimill | bridgeporttaskintf.cc) +
which sends EMCMOT_SET_AOUT

++++
Parameter, Type: [index, unsigned char] [start, double] 
[end, double] [now, unsigned char]
++++

=== EMC_MOTION_SET_DOUT_TYPE

Description, NML Type: sets an digital output value coordinated with motion, 305

Obs: emccanon.cc currently lacks this in EMC2, not used in EMC2, needs to go to HAL

Written From: none

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcMotionSetDout (minimill | bridgeporttaskintf.cc) +
which sends EMCMOT_SET_DOUT

Parameter, Type: [index, unsigned char] [start, double] [end, double]

=== EMC_MOTION_STAT_TYPE

Description, NML Type: status for motion, not sent as a message but used as is, 399

Written From: none

Read To: none

++++
Parameter, Type: [heartbeat, unsigned long int] [traj, EMC_TRAJ_STAT]
[axis[EMC_AXIS_MAX], EMC_AXIS_STAT]
++++

== EMC TASK

=== EMC_TASK_INIT_TYPE

Description, NML Type: calls the Task init(), 501

Obs: not used, emcTaskInit called directly from emctask_startup()

Written From: none

Read To: emcTaskIssueCommand (emctaskmain.cc) calls emcTaskInit()

Parameter, Type:

=== EMC_TASK_HALT_TYPE

Description, NML Type: -, 502

Written From: none

Read To: none

Parameter, Type:

=== EMC_TASK_ABORT_TYPE

Description, NML Type: aborts task, cleans up, 503

Obs: used on shutdown

Written From: sendAbort (emcsh.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc) aborts all

Parameter, Type:

=== EMC_TASK_SET_MODE_TYPE

Description, NML Type: sets current TASK mode, MANUAL, MDI, AUTO, 504

Obs: used for switching the current mode

Written From: sendManual sendMdi sendAuto (emcsh.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcTaskSetMode (emcTask.cc)

Parameter, Type: [mode, enum EMC_TASK_MODE_ENUM]

=== EMC_TASK_SET_STATE_TYPE

Description, NML Type: , 505

Written From: none

Read To: none

Parameter, Type: [state, enum EMC_TASK_STATE_ENUM]

=== EMC_TASK_PLAN_OPEN_TYPE

Description, NML Type: , 506

Written From: none

Read To: none

Parameter, Type: [file, char[LINELEN]]

=== EMC_TASK_PLAN_RUN_TYPE

Description, NML Type: , 507

Written From: none

Read To: none

Parameter, Type: [line, int]

=== EMC_TASK_PLAN_READ_TYPE

Description, NML Type: , 508

Written From: none

Read To: none

Parameter, Type:

=== EMC_TASK_PLAN_EXECUTE_TYPE

Description, NML Type: , 509

Written From: none

Read To: none

Parameter, Type: [command, char[LINELEN]]

=== EMC_TASK_PLAN_PAUSE_TYPE

Description, NML Type: , 510

Written From: none

Read To: none

Parameter, Type:

=== EMC_TASK_PLAN_STEP_TYPE

Description, NML Type: , 511

Written From: none

Read To: none

Parameter, Type:

=== EMC_TASK_PLAN_RESUME_TYPE

Description, NML Type: , 512

Written From: none

Read To: none

Parameter, Type:

=== EMC_TASK_PLAN_END_TYPE

Description, NML Type: , 513

Written From: none

Read To: none

Parameter, Type:

=== EMC_TASK_PLAN_CLOSE_TYPE

Description, NML Type: , 514

Written From: none

Read To: none

Parameter, Type:

=== EMC_TASK_PLAN_INIT_TYPE

Description, NML Type: , 515

Written From: none

Read To: none

Parameter, Type:

=== EMC_TASK_PLAN_SYNCH_TYPE

Description, NML Type: , 516

Written From: none

Read To: none

Parameter, Type:

=== EMC_TASK_STAT_TYPE

Description, NML Type: , 599

Written From: none

Read To: none

Parameter, Type: [heartbeat, unsigned long int] [a HUGE load of params]

== EMC TOOL

=== EMC_TOOL_INIT_TYPE

Description, NML Type: starts TOOL init, 1101

Obs: used for initializing the IO stuff, should load the tool table too

Written From: emcIoInit (iotaskintf.cc)

Read To: main (ioControl.cc simIoControl.cc) +
emc_io_get_command (iosh.cc)

Parameter, Type:

=== EMC_TOOL_HALT_TYPE

Description, NML Type: stops TOOL, 1102

Obs: used for stopping IO, doesn't actually do anything so far, in
EMC1 it was send to subordinates too (spindle, aux, coolant, lube)

Written From: emcIoHalt (iotaskintf.cc)

Read To: main (ioControl.cc simIoControl.cc) +
emc_io_get_command (iosh.cc)

Parameter, Type:

=== EMC_TOOL_ABORT_TYPE

Description, NML Type: aborts TOOL, 1103

Obs: used for aborting IO, doesn't actually do anything so far, in
EMC1 it was send to subordinates too (spindle, aux, coolant, lube)

Written From: emcIoAbort (iotaskintf.cc)

Read To: main (ioControl.cc simIoControl.cc) +
emc_io_get_command (iosh.cc)

Parameter, Type:

=== EMC_TOOL_PREPARE_TYPE

Description, NML Type: prepares a tool for tool changing, 1104

Obs: loads the prep tool in emcioStatus.tool.toolPrepped, should go to
PLC and make it move the desired tool in the toolchanging position

Written From: SELECT_TOOL (emccanon.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcToolPrepare (iotaskintf.cc) +
which sends it to the IO controller

Parameter, Type: [tool, int]

=== EMC_TOOL_LOAD_TYPE

Description, NML Type: changes the current tool with the prepared
tool, 1105

Obs: loads the actual tool, makes toolprepped=0

Written From: CHANGE_TOOL (emccanon.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcToolLoad (iotaskintf.cc) +
which sends it to the IO controller, +
main (simIoControl.cc ioControl.cc)

Parameter, Type:

=== EMC_TOOL_UNLOAD_TYPE

Description, NML Type: unloads the current tool from the spindle, 1106

Obs: unloads the current tool, not written in EMC2 only read

Written From: none

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcToolUnLoad (iotaskintf.cc) +
which sends it to the IO controller, +
main (simIoControl.cc ioControl.cc)

Parameter, Type:

=== EMC_TOOL_LOAD_TOOL_TABLE_TYPE

Description, NML Type: loads the tool table, without this tool comp. can't be made, 1107

Written From: sendLoadToolTable (emcsh.cc)

Read To: none

Parameter, Type: [file, char[LINELEN]]

=== EMC_TOOL_SET_OFFSET_TYPE

Description, NML Type: , 1108

Written From: none

Read To: none

Parameter, Type: [tool, int] [length, double] [diameter, double]

=== EMC_TOOL_STAT_TYPE

Description, NML Type: , 1199

Written From: none

Read To: none

Parameter, Type:

== EMC AUX

=== EMC_AUX_INIT_TYPE

Description, NML Type: , 1201

Written From: none

Read To: none

Parameter, Type:

=== EMC_AUX_HALT_TYPE

Description, NML Type: , 1202

Written From: none

Read To: none

Parameter, Type:

=== EMC_AUX_ABORT_TYPE

Description, NML Type: , 1203

Written From: none

Read To: none

Parameter, Type:

=== EMC_AUX_DIO_WRITE_TYPE

Description, NML Type: , 1204

Written From: none

Read To: none

Parameter, Type: [index, int] [value, int]

=== EMC_AUX_AIO_WRITE_TYPE

Description, NML Type: , 1205

Written From: none

Read To: none

Parameter, Type: [index, int] [value, double]

=== EMC_AUX_ESTOP_ON_TYPE

Description, NML Type: , 1206

Written From: none

Read To: none

Parameter, Type:

=== EMC_AUX_ESTOP_OFF_TYPE

Description, NML Type: , 1207

Written From: none

Read To: none

Parameter, Type:

=== EMC_AUX_STAT_TYPE

Description, NML Type: , 1299

Written From: none

Read To: none

++++
Parameter, Type: [estop, int]
[estopIn, int]
[dout, unsigned char[EMC_AUX_MAX_DOUT]]
[din, unsigned char[EMC_AUX_MAX_DIN]]
[aout, double[EMC_AUX_MAX_AOUT]]
[ain, double[EMC_AUX_MAX_AIN]]
++++

== EMC SPINDLE

=== EMC_SPINDLE_INIT_TYPE

Description, NML Type: , 1301

Written From: none

Read To: none

Parameter, Type:

=== EMC_SPINDLE_HALT_TYPE

Description, NML Type: , 1302

Written From: none

Read To: none

Parameter, Type:

=== EMC_SPINDLE_ABORT_TYPE

Description, NML Type: , 1303

Written From: none

Read To: none

Parameter, Type:

=== EMC_SPINDLE_ON_TYPE

Description, NML Type: , 1304

Written From: none

Read To: none

Parameter, Type: [speed, double]

=== EMC_SPINDLE_OFF_TYPE

Description, NML Type: , 1305

Written From: none

Read To: none

Parameter, Type:

=== EMC_SPINDLE_FORWARD_TYPE

Description, NML Type: , 1306

Written From: none

Read To: none

Parameter, Type: [speed, double]

=== EMC_SPINDLE_REVERSE_TYPE

Description, NML Type: , 1307

Written From: none

Read To: none

Parameter, Type: [speed, double]

=== EMC_SPINDLE_STOP_TYPE

Description, NML Type: , 1308

Written From: none

Read To: none

Parameter, Type: [speed, double]

=== EMC_SPINDLE_INCREASE_TYPE

Description, NML Type: , 1309

Written From: none

Read To: none

Parameter, Type: [speed, double]

=== EMC_SPINDLE_DECREASE_TYPE

Description, NML Type: , 1310

Written From: none

Read To: none

Parameter, Type:

=== EMC_SPINDLE_CONSTANT_TYPE

Description, NML Type: , 1311

Written From: none

Read To: none

Parameter, Type:

=== EMC_SPINDLE_BRAKE_RELEASE_TYPE

Description, NML Type: , 1312

Written From: none

Read To: none

Parameter, Type:

=== EMC_SPINDLE_BRAKE_ENGAGE_TYPE

Description, NML Type: , 1313

Written From: none

Read To: none

Parameter, Type:

=== EMC_SPINDLE_ENABLE_TYPE

Description, NML Type: , 1314

Written From: none

Read To: none

Parameter, Type:

=== EMC_SPINDLE_DISABLE_TYPE

Description, NML Type: , 1315

Written From: none

Read To: none

Parameter, Type:

=== EMC_SPINDLE_STAT_TYPE

Description, NML Type: , 1399

Written From: none

Read To: none

++++
Parameter, Type: [speed, double]
[direction, int]
[brake, int]
[increasing, int]
[enabled, int]
++++

== EMC COOLANT

=== EMC_COOLANT_INIT_TYPE

Description, NML Type: initializes the COOLANT controller (currently
part of the IO controller), 1401

Obs: not written in EMC2, only read, in EMC1 it was sent when
TOOL_INIT was sent

Written From: none

Read To: main (ioControl.cc simIoControl.cc) +
emc_io_get_command (iosh.cc)

Parameter, Type: none

=== EMC_COOLANT_HALT_TYPE

Description, NML Type: stops the COOLANT, 1402

Obs: not written in EMC2, only read, in EMC1 it was sent when TOOL_HALT was sent

Written From: none

Read To: main (ioControl.cc simIoControl.cc) +
emc_io_get_command (iosh.cc)

Parameter, Type: none

=== EMC_COOLANT_ABORT_TYPE

Description, NML Type: aborts the COOLANT, 1403

Obs: not written in EMC2, only read, in EMC1 it was sent when TOOL_ABORT was sent

Written From: none

Read To: main (ioControl.cc simIoControl.cc) +
emc_io_get_command (iosh.cc)

Parameter, Type: none

=== EMC_COOLANT_MIST_ON_TYPE

Description, NML Type: starts MIST coolant, 1404

Obs: used, written by emccanon.cc

Written From: MIST_ON (emccanon.cc) sendMistOn (emcsh.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcCoolantMistOn (iotaskintf.cc) +
which sends it to the IO controller, +
main (simIoControl.cc ioControl.cc) iosh.cc

Parameter, Type: none

=== EMC_COOLANT_MIST_OFF_TYPE

Description, NML Type: stops MIST coolant, 1405

Obs: used, written by emccanon.cc

Written From: MIST_OFF (emccanon.cc) sendMistOff (emcsh.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcCoolantMistOff (iotaskintf.cc) +
which sends it to the IO controller, +
main (simIoControl.cc ioControl.cc) iosh.cc

Parameter, Type: none

=== EMC_COOLANT_FLOOD_ON_TYPE

Description, NML Type: starts FLOOD coolant, 1406

Obs: used, written by emccanon.cc

Written From: FLOOD_ON (emccanon.cc) sendFloodOn (emcsh.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcCoolantFloodOn (iotaskintf.cc) +
which sends it to the IO controller, +
main (simIoControl.cc ioControl.cc) iosh.cc

Parameter, Type: none

=== EMC_COOLANT_FLOOD_OFF_TYPE

Description, NML Type: stops FLOOD coolant, 1407

Obs: used, written by emccanon.cc

Written From: FLOOD_OFF (emccanon.cc) sendFloodOff (emcsh.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcCoolantFloodOff (iotaskintf.cc) +
which sends it to the IO controller, +
main (simIoControl.cc ioControl.cc) iosh.cc

Parameter, Type: none

=== EMC_COOLANT_STAT_TYPE

Description, NML Type: status for coolant, not sent as a message but used as is, 1499

Written From: none

Read To: none

Parameter, Type: [mist, int] [flood, int]

== EMC LUBE

=== EMC_LUBE_INIT_TYPE

Description, NML Type: initializes the LUBE controller (currently part of the IO controller), 1501

Obs: not written in EMC2, only read, in EMC1 it was sent when TOOL_INIT was sent

Written From: none

Read To: main (ioControl.cc simIoControl.cc) +
emc_io_get_command (iosh.cc)

Parameter, Type: none

=== EMC_LUBE_HALT_TYPE

Description, NML Type: stops the LUBE, 1502

Obs: not written in EMC2, only read, in EMC1 it was sent when TOOL_HALT was sent

Written From: none

Read To: main (ioControl.cc simIoControl.cc) +
emc_io_get_command (iosh.cc)

Parameter, Type: none

=== EMC_LUBE_ABORT_TYPE

Description, NML Type: aborts the LUBE, 1503

Obs: not written in EMC2, only read, in EMC1 it was sent when TOOL_ABORT was sent

Written From: none

Read To: main (ioControl.cc simIoControl.cc) +
emc_io_get_command (iosh.cc)

Parameter, Type: none

=== EMC_LUBE_ON_TYPE

Description, NML Type: starts LUBE, 1504

Obs: written only by the GUIs (emcsh.cc)

Written From: sendLubeOn (emcsh.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcLubeOn (iotaskintf.cc) +
which sends it to the IO controller, +
main (ioControl.cc simIoControl.cc) +
emc_io_get_command (iosh.cc)

Parameter, Type: none

=== EMC_LUBE_OFF_TYPE

Description, NML Type: stops LUBE, 1505

Obs: written only by the GUIs (emcsh.cc)

Written 

From: sendLubeOff (emcsh.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcLubeOff (iotaskintf.cc) +
which sends it to the IO controller, +
main (ioControl.cc simIoControl.cc) +
emc_io_get_command (iosh.cc)

Parameter, Type: none

=== EMC_LUBE_STAT_TYPE

Description, NML Type: status for LUBE, not sent as a message but used as is, 1599

Written From: none

Read To: none

Parameter, Type: [on, int] [level, int]

== EMC SET

=== EMC_SET_DIO_INDEX_TYPE

Description, NML Type: , 5001

Obs: not used

Written From: none

Read To: none

Parameter, Type: [value, int] [index, int]

=== EMC_SET_AIO_INDEX_TYPE

Description, NML Type: , 5002

Obs: not used

Written From: none

Read To: none

Parameter, Type: [value, int] [index, int]

=== EMC_SET_POLARITY_TYPE

Description, NML Type: , 5003

Obs: not used

Written From: none

Read To: none

Parameter, Type: [value, int] [polarity, int]

== EMC IO

=== EMC_IO_INIT_TYPE

Description, NML Type: , 1601

Obs: not written in EMC2, only read

Written From: none

Read To: main (ioControl.cc simIoControl.cc) +
emc_io_get_command (iosh.cc)

Parameter, Type:

=== EMC_IO_HALT_TYPE

Description, NML Type: , 1602

Obs: not used

Written From: none

Read To: none

Parameter, Type:

=== EMC_IO_ABORT_TYPE

Description, NML Type: , 1603

Obs: not used

Written From: none

Read To: none

Parameter, Type:

=== EMC_IO_SET_CYCLE_TIME_TYPE

Description, NML Type: , 1604

Obs: not used

Written From: none

Read To: none

Parameter, Type: [cycleTime, double]

=== EMC_IO_STAT_TYPE

Description, NML Type: status for IO, not sent as a message but used as is, 1699

Written From: none

Read To: none

++++
Parameter, Type: [heartbeat, unsigned long int]
[tool, EMC_TOOL_STAT]
[spindle, EMC_SPINDLE_STAT]
[coolant, EMC_COOLANT_STAT]
[aux, EMC_AUX_STAT]
[lube, EMC_LUBE_STAT]
++++

== EMC INIT, HALT, & ABORT

=== EMC_INIT_TYPE

Description, NML Type: , 1901

Obs: not used

Written From: none

Read To: none

Parameter, Type:

=== EMC_HALT_TYPE

Description, NML Type: , 1902

Obs: not used

Written From: none

Read To: none

Parameter, Type:

=== EMC_ABORT_TYPE

Description, NML Type: , 1903

Obs: not used

Written From: none

Read To: none

Parameter, Type:

== EMC LOG

=== EMC_LOG_OPEN_TYPE

Description, NML Type: opens the log file, 1904

Obs: not used in EMC2, it was used in EMC[1] from emclog.tcl

Written From: sendLogOpen (emcsh.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcLogOpen (taskintf.cc) +
which sends EMCMOT_OPEN_LOG

++++
Parameter, Type: [file, char[LINELEN]]
[type, int]
[size, int]
[skip, int]
[which, int]
[triggerType, int]
[triggerVar, int]
[triggerThreshold, double]
++++

=== EMC_LOG_START_TYPE

Description, NML Type: starts logging, 1905

Obs: not used in EMC2, it was used in EMC[1] from emclog.tcl

Written From: sendLogStart (emcsh.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc) calls +
emcLogStart (taskintf.cc) +
which sends EMCMOT_START_LOG

Parameter, Type: none

=== EMC_LOG_STOP_TYPE

Description, NML Type: stops logging, 1906

Obs: not used in EMC2, it was used in EMC[1] from emclog.tcl

Written From: sendLogStop (emcsh.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc) calls +
emcLogStop (taskintf.cc) +
which sends EMCMOT_STOP_LOG

Parameter, Type: none

=== EMC_LOG_CLOSE_TYPE

Description, NML Type: closes the log file, 1907

Obs: not used in EMC2, it was used in EMC[1] from emclog.tcl

Written From: sendLogClose (emcsh.cc)

Read To: emcTaskIssueCommand (emctaskmain.cc) +
calls emcLogClose (taskintf.cc) +
which sends EMCMOT_CLOSE_LOG

Parameter, Type: none

== EMC STA	T

=== EMC_STAT_TYPE

Description, NML Type: aggregation of all the status messages, +
        not sent as a message but used as is all over the place, 1999

Written From: none

Read To: none

Parameter, Type: [task, EMC_TASK_STAT] +
[motion, EMC_MOTION_STAT] +
[io, EMC_IO_STAT] +
[logFile, char[LINELEN]] +
[logType, int] +
[logSize, int] +
+++[+++logSkip, int] +
logOpen, int] [logStarted, int] [logPoints, int]


