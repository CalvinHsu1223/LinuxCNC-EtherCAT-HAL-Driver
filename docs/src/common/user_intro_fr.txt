:lang: fr
:toc:

= LinuxCNC

[[cha:linuxcnc-user-introduction]] (((LinuxCNC User Introduction)))

== Introduction

Ce document est centré sur l'utilisation de LinuxCNC, 
il est plutôt destiné aux lecteurs l'ayant déjà installé et configuré.
Quelques informations sur l'installation sont données dans les
chapitres suivants.
La documentation complète sur l'installation et
la configuration se trouve dans le manuel de l'intégrateur.

[[sec:Comment-Fonctionne-LinuxCNC]]
== Comment fonctionne LinuxCNC

LinuxCNC est un peu plus que juste un autre programme de fraiseuse
CNC(((CNC))). Il est capable de contrôler des machines-outils, des
robots ou d'autres automatismes. Il est capable de contrôler des
servomoteurs, des moteurs pas à pas, des relais ainsi que d'autres
mécanismes relatifs aux machines-outils. 

Il y a quatre principales composantes du logiciel LinuxCNC:

* un contrôleur de mouvement (EMCMOT), 
* une contrôleur d'entrées/sorties discrètes (EMCIO), 
* un exécuteur des tâches qui les coordonne (EMCTASK), 
* et les interfaces utilisateur graphiques. 

En outre il existe une couche appelée HAL (couche d'abstraction du matériel) 
qui permet la configuration de LinuxCNC sans avoir besoin de recompiler.

.Machine simple contrôlée par LinuxCNC
image::images/whatstep1.png[align="center"]

La figure ci-dessus montre un diagramme bloc
représentant une machine 3 axes typique comme LinuxCNC les aime. Cette
figure montre un système basé sur des moteurs pas à pas. Le PC,
tournant sous Linux(((Linux))) contrôle les interfaces de puissance des
moteurs pas à pas en leur envoyant des signaux au travers du port
parallèle. Ces signaux (impulsionnels) font que la puissance adéquate
est fournie aux moteurs. LinuxCNC peut également contrôler des servomoteurs
via une interface de puissance pour servomoteurs ou utiliser le port
parallèle étendu connecté à une carte de contrôle externe. Quand nous
examinerons chacun des composants qui forment un système LinuxCNC, nous
nous référerons à cette machine typique.

[[sub:Interfaces-utilisateur-graphiques]]
== Interfaces utilisateur graphiques

L'interface graphique est la partie de LinuxCNC qui interagit avec
l'opérateur de la machine. LinuxCNC est fourni avec plusieurs
interfaces utilisateurs graphiques:


* <<cha:Axis,_Axis_>>, l'interface utilisateur standard.

.L'interface graphique AXIS[[fig:Interface-graphique-AXIS]]
image::images/axis_2.5_fr.png[align="center"]

* <<cha:touchy-gui,_Touchy_>>, une interface graphique pour écran tactile.

.L'interface graphique Touchy[[fig:touchy-gui]]

image::images/touchy_fr.png[align="center"]

* <<cha:ngcgui,_NGCGUI_>>, une interface graphique gérant les sous-programmes.
Elle permet très simplement de créer des programme G-code. Elle supporte
surtout la concaténation de fichiers de sous-programmes, ce qui permet de
construire des programmes G-code complets sans aucune programmation.

.L'interface graphique NGCGUI intégrée dans Axis[[fig:ngcgui-gui]]
image::images/ngcgui_fr.png[align="center"]

* <<cha:Mini,_Mini_>>, une interface en Tcl/Tk.

.L'interface graphique Mini[[fig:Interface-graphique-Mini]]
image::images/mini_fr.png[align="center"]

* <<cha:TkLinuxCNC,_TkLinuxCNC_>>, une autre interface basée sur Tcl/Tk.
C'est l'interface la plus populaire après Axis

.L'interface graphique tklinuxcnc[[fig:L-interface-graphique-tklinuxcnc]]
image::images/tklinuxcnc_fr.png[align="center"]

* <<cha:keystick-gui,_Keystick_>>, une interface graphique textuelle et
minimaliste, appropriée pour les installations légères (sans serveur X par
exemple).

.L'interface textuelle Keystick[[fig:L-interface-Keystick]]
image::images/keystick.png[align="center"]

* _Xemc_, un programme X-Windows

* _halui_, une interface utilisateur basée sur HAL, qui permet de contrôler
LinuxCNC en utilisant des boutons et des interrupteurs

* _linuxcncrsh_, une interface utilisateur basée sur telnet, qui permet 
d'envoyer des commandes à partir d'ordinateurs distants de celui de LinuxCNC

== Panneaux de contrôle virtuels

* _PyVCP_, un panneau de contrôle virtuel basé sur Python, il peut être intégré
dans l'interface graphique Axis ou utilisé en autonome.

* _GladeVCP_, un panneau de contrôle virtuel basé sur Glade, il peut être
intégré dans l'interface graphique Axis ou utilisé en autonome.

== Langues

LinuxCNC utilise des fichiers traduits pour les interfaces utilisateur. 
Il fonctionne dans plusieurs langues et démarre dans la langue de la 
session ouverte par l'utilisateur au démarrage du PC. Si votre langue n'a pas 
encore été traduite contactez un développeur sur l'IRC ou sur la mailing liste 
si vous pouvez aider à la traduction.

== Penser comme un opérateur sur CNC[[sec:Penser-operateur]]

Ce manuel ne prétend pas vous apprendre à utiliser un tour ou une
fraiseuse. Devenir un opérateur expérimenté prends beaucoup de temps et
demande beaucoup de travail. Un auteur a dit un jour, _Nous apprenons
par l'expérience, si on la possède toute_. Les outils cassés, les étaux
attaqués et les cicatrices sont les preuves des leçons apprises. Une
belle finition, des tolérances serrées et la prudence pendant le
travail sont les preuves des leçons retenues. Aucune machine, aucun
programme ne peut remplacer l'expérience humaine.

Maintenant que vous commencez à travailler avec le programme LinuxCNC,
vous devez vous placer dans la peau d'un opérateur. Vous devez être 
dans le rôle de quelqu'un qui a la charge d'une machine. C'est une
machine qui attendra vos commandes puis qui exécutera les ordres que
vous lui donnerez. Dans ces pages, nous donnerons les explications qui
vous aideront à devenir un bon opérateur de CNC avec LinuxCNC. Vous aurez besoin
de bonnes informations ici, devant vous, c'est là que les pages suivantes 
prendront tout leur sens.

== Modes opératoires[[sub:Modes-operatoires]]

Quand LinuxCNC fonctionne, il existe trois différents modes majeurs pour
entrer des commandes. Les modes _Manuel_(((Manuel))), _Auto_(((Auto))) et
_MDI_(((MDI))). Passer d'un mode à un autre marque une grande différence
dans le comportement de LinuxCNC. Des choses spécifiques à un mode ne
peuvent pas être faites dans un autre. L'opérateur peut faire une prise
d'origine sur un axe en mode manuel mais pas en mode auto ou MDI.
L'opérateur peut lancer l'exécution complète d'un programme de G-codes
en mode auto mais pas en mode manuel ni en MDI.

En mode manuel, chaque commande est entrée séparément. En termes
humains, une commande manuelle pourrait être _active l'arrosage_ ou _jog
l'axe X à 250 millimètres par minute_. C'est en gros, équivalent à
basculer un interrupteur ou à tourner la manivelle d'un axe. Ces
commandes sont normalement contrôlées en pressant un bouton de
l'interface graphique avec la souris ou en maintenant appuyée une
touche du clavier. En mode auto, un bouton similaire ou l'appui d'une
touche peut être utilisé pour charger ou lancer l'exécution
complète d'un programme de G-codes stocké dans un fichier. En mode
d'entrée de données manuelles (MDI) l'opérateur peut saisir un bloc de
codes est dire à la machine de l'exécuter en pressant la touche
_Return_ ou _Entrée_ du clavier.

Certaines commandes de mouvement sont disponibles et produisent les
mêmes effets dans tous les modes. Il s'agit des commandes
_Abandon_(((ABANDON))), _Arrêt d'Urgence_(((ESTOP))) et _Correcteur de vitesse 
travail_ (((correcteur de vitesse))). Ces commandes se dispensent d'explications.

L'interface utilisateur graphique AXIS supprime certaines distinctions
entre Auto et les autres modes en rendant automatique la disponibilité
des commandes, la plupart du temps. Il rend également floue la
distinction entre Manuel et MDI parce que certaines commandes manuelles
comme _Toucher_, sont également implémentées en envoyant une commande
MDI. Il fait cela en changeant automatiquement le mode qui est 
nécessaire pour l'action que l'utilisateur a demandé. 


